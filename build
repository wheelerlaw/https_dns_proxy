#!/usr/bin/env bash
set -ex

function build(){
    cmake .
    make

    #### Create output directory for dpkg-deb
    mkdir -p out/usr/local/bin
    cp https_dns_proxy out/usr/local/bin

    mkdir -p out/DEBIAN
    cp debian/control out/DEBIAN

    mkdir -p out/usr/lib/systemd/system/
    cp https-dns-proxy.service out/usr/lib/systemd/system

    dpkg-deb --build out https-dns-proxy.deb

}

function install() {
    apt-get install ./https_dns_proxy.deb
}

function clean() {
    while read line; do
        rm -rf $line
    done < .gitignore
}

function cron() {
    version="`cat Makefile | sed -n 's|^mimikatz_version = \(.*\)$|\1|p'`"
    download_link="https://github.com/gentilkiwi/mimikatz/releases/download/$mimikatz_version/mimikatz_trunk.7z"
    echo "Version: $version"

    upstream_download_link=$(curl -fssL "https://api.github.com/repos/gentilkiwi/mimikatz/releases/latest" | jq -r '.assets[] | select(.name=="mimikatz_trunk.7z") | .browser_download_url')
    upstream_version=$(echo $upstream_download_link | sed 's|.*\/download\/\([^\/]*\)\/.*|\1|')
    echo "Upstream version: $upstream_version"
    if [ "$upstream_version" != "$version" ]; then
        git clone "https://wheelerlaw:$GITHUB_TOKEN@github.com/wheelerlaw/go-mimikatz.git"
        cd go-mimikatz
        git config user.name "Wheeler Law"
        git config user.email "whelderwheels613@gmail.com"
        cat Makefile | sed "s|^mimikatz_version = .*\$|mimikatz_version = $upstream_version|" | tee Makefile | grep $upstream_version
        new_key=$(base64 /dev/urandom | head -c 100 | tr -d '\n' | tr -dc A-Za-z0-9)
        cat crypt.go | sed "s|^const KEY string = \".*\"$|const KEY string = \"$new_key\"|" | tee crypt.go | grep 'const KEY string'
        
        # Execute the build function, above
        build

        # If we make it here, the build must have succeeded (set -e).
        git add -A
        git commit -m "Auto update to $upstream_version"
        git tag -a -m "Auto update to $upstream_version" $upstream_version
        git push --follow-tags
    fi
    exit
}

case $1 in
clean)
    clean
    ;;
cron)
    cron
    ;;
build)
    build
    ;;
*)
    #### If we're running in a cron job, check the upstream version against the repo version. If a newer version is available, then update to that
    #### version, and tag a new commit. Travis will pick up the tagged commit and build the deb and deploy it. 
    if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then
        cron
    else
        build
    fi
    ;;
esac
